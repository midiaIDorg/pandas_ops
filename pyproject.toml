[build-system]
requires = ["setuptools >= 64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name="pandas_ops"
version="0.0.2"
description="Common operations on pandas data frames."
readme="README.md"
authors=[
    {name="Mateusz Krzysztof Łącki",email="matteo.lacki@gmail.com"},
    {name="Michał Piotr Startek",email="michalsta@mimuw.edu.pl"},
]
dependencies = [
    "click",
    "numpy",
    "numba",
    "numba_progress",
    "pandas",
    "tqdm",
    "duckdb",
    "pytest",
    "h5py",
    "toml",
]

[project.scripts]
apply_sql_with_duckdb = "pandas_ops.tools.apply_sql_with_duckdb:main"
df_cat = "pandas_ops.tools.df_cat:main"
df_equal = "pandas_ops.tools.df_equal:main"
df_head = "pandas_ops.tools.df_head:main"
df_histogram = "pandas_ops.tools.df_histogram:main"
df_len = "pandas_ops.tools.df_len:main"
df_parsingstack = "pandas_ops.tools.df_parsingstack:main"
apply_sql = "pandas_ops.tools.df_manipulation:apply_sql"
reformat_table = "pandas_ops.tools.reformatting:reformat_table"
df_concat = "pandas_ops.tools.df_manipulation:df_concat"
echotoml = "pandas_ops.tools.echotoml:echotoml"
run_general_sql = "pandas_ops.tools.df_manipulation:run_general_sql"
assert_lexicographically_sorted= "pandas_ops.tools.assert_lexicographically_sorted:assert_lexicographically_sorted"
toml2json = "pandas_ops.tools.reformatting:toml2json"
json2toml = "pandas_ops.tools.reformatting:json2toml"

[project.urls]
homepage="https://github.com/midiaIDorg/pandas_ops.git"
repository="https://github.com/midiaIDorg/pandas_ops.git"

[tool.uv]
reinstall-package = ["pandas_ops"]


[tool.pytest.ini_options]
testpaths = ["tests"]